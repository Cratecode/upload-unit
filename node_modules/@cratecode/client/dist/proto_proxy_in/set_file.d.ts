import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message SetFile
 */
export interface SetFile {
    /**
     * @generated from protobuf field: string path = 1;
     */
    path: string;
    /**
     * @generated from protobuf field: optional bytes data = 2;
     */
    data?: Uint8Array;
    /**
     * @generated from protobuf field: optional bool local = 3;
     */
    local?: boolean;
}
declare class SetFile$Type extends MessageType<SetFile> {
    constructor();
    create(value?: PartialMessage<SetFile>): SetFile;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetFile): SetFile;
    internalBinaryWrite(message: SetFile, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message SetFile
 */
export declare const SetFile: SetFile$Type;
export {};
